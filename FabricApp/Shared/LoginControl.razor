@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@using FabricAPP.Interfaces;
@using FabricAPP.Pages.Identity;
@inject AuthenticationStateProvider AuthenticationStateProvider;

@if (User.Identity.Name != null)
{
    <a class="user-info">
        <b>@GivenName @Surname</b>
        @if (Avatar != null)
        {
            <img src="@Avatar" />
        }
    </a>
    <a class="ml-md-auto btn btn-primary" href="/Identity/Logout" target="_top">Logout</a>
}
else
{
    <InternalLoginControll />
    <ExternalLoginControll />
}

@code {
    private ClaimsPrincipal User;
    private string GivenName;
    private string Surname;
    private string Avatar;



    protected override async void OnInitialized()
    {
        base.OnInitialized();
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            User = authState.User;
            
            if(User.Identity.Name != null)
            {
                var givenName = User.FindFirst(ClaimTypes.GivenName);
                if (givenName != null)
                    GivenName = givenName.Value;
                else
                    GivenName = User.Identity.Name;

                var surname = User.FindFirst(ClaimTypes.Surname);
                if (surname != null)
                    Surname = surname.Value;
                else
                    Surname = "";

                var avatar = (User.FindFirst("image"));
                if (avatar != null)
                    Avatar = avatar.Value;
            }
        }
        catch
        {  
        }
    }
}