@using System
@using System.IO;

<div class="users-info">
    <h1>Add users with addresses from XML</h1>
    <div class="btn_container">
        <div class="input-file">
            <InputFile class="btn btn-primary" OnChange="SetData">Chose file</InputFile>
        </div>

        <div class="info-btn" @onmouseover="ShowInfo" @onmouseout="ShowInfo"></div>
    </div>

    @if (Loaded)
    {
        <table class="emp-tbl" id="Employees">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>Contact Nr</th>
                    <th>Email</th>
                    <th>Street</th>
                    <th>Street Nr</th>
                    <th>House Nr</th>
                    <th>City</th>
                    <th>ZIP Code</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var emp in Employees)
                {
                    <tr id="@emp.ID" @key="@emp">
                        <td>@emp.ID</td>
                        <td><input type="text" class="form-control" @bind="@emp.FirstName" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.LastName" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.ContactNo" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.Email" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.Address.Street" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.Address.StreetNr" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.Address.HouseNr" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.Address.City" readonly ondblclick="this.readOnly='';"/></td>
                        <td><input type="text" class="form-control" @bind="@emp.Address.Zip" readonly ondblclick="this.readOnly='';"/></td>
                        <th><button class="btn-delete" @onclick="@((e) => { Delete(emp); })" disabled=@Saved></button></th>
                    </tr>
                }
            </tbody>
        </table>

        <div class="btn_container">
            <div class="save-container">
                <button class="btn btn-primary" disabled=@SaveBtnDisabled @onclick="Save">Save</button>
            </div>
        </div>
    }
    else if (Error)
    {
        <div class="error">
            @ErrorMsg
        </div>
    }

</div>


@if (ShowedInfo)
{
    <ImportInfo />
}

@if (Saved)
{
    <div class="saved-info">
        @SavedEls elements was saved
    </div>
}


@if (Error)
{
    <div class="error">
        @ErrorMsg
    </div>
}


@code {
    public bool Loaded { get; set; } = false;
    public bool Saved { get; set; } = false;
    public int SavedEls { get; set; }
    bool SaveBtnDisabled = false;
    public bool Error { get; set; } = false;
    public string ErrorMsg { get; set; }

    public List<Models.Employee> Employees { get; set; }

    private async void SetData(InputFileChangeEventArgs e)
    {
        try
        {
            string xml = "";
            Loaded = false;
            Error = false;

            foreach (var file in e.GetMultipleFiles(1))
            {
                using (var stream = file.OpenReadStream())
                using (var reader = new StreamReader(stream))
                {
                    xml = await reader.ReadToEndAsync();
                }
            }

            if (!Error)
            {
                Employees = Controllers.EmployeesController.GetFromXML(xml);
                if (Employees.Count == 0)
                {
                    ErrorMsg = "Error with loaded, a data from file. Please check the file.";
                    Error = true;
                }
                else
                {
                    SaveBtnDisabled = false;
                    Loaded = true;
                    Saved = false;
                }

            }
        }
        catch (Exception ex)
        {
            ErrorMsg = ex.Message;
            Error = true;
        }

        this.StateHasChanged();
    }

    public bool ShowedInfo { get; set; }

    public void ShowInfo()
    {
        ShowedInfo = !ShowedInfo;
    }

    void Save()
    {
        try
        {
            Error = false;
            Saved = false;
            SaveBtnDisabled = true;

            SavedEls = Controllers.EmployeesController.Save();

            if (SavedEls == -1)
            {
                throw new Exception("Save in db error");
            }

            Saved = true;
            
        }
        catch(Exception ex)
        {
            ErrorMsg = ex.Message;
            Error = true;
            SaveBtnDisabled = false;
        }
    }

    void Delete(Models.Employee employee)
    {
        try
        {
            Error = false;
            Employees.Remove(employee);
        }
        catch(Exception ex)
        {
            ErrorMsg = ex.Message;
            Error = true;
        }
    }
}
